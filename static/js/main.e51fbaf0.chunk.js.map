{"version":3,"sources":["App.tsx","GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","this","updatedGoods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cN","onClick","setState","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,+FCfQC,EAA6B,SAAH,GAAmB,IAAbC,EAAK,EAALA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAAM,SAEbA,GAHIA,SDHFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGW,SAARL,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KAwCN,IAAMM,EAAG,iKAIZ,OAJY,oCACdC,MAAQ,CACNC,YAAY,EACZC,SAAUT,EAASU,MACpB,EAkEA,OAlEA,mCAED,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BE,EAAQ,EAARA,SAAUD,EAAU,EAAVA,WACZI,EArCH,SACLV,EAAgB,GAEf,IADCO,EAAQ,EAARA,SAAUD,EAAU,EAAVA,WAENK,EAAY,YAAOX,GAiBzB,OAfAW,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQP,GACN,KAAKT,EAASiB,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAM1B,OAAO,KAGFZ,EAAaK,EAAaQ,UAAYR,EAgBtBS,CACnBjB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKe,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,UAAS,UACtB,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAaT,EAASiB,WAEtCS,QAAS,kBAAO,EAAKC,SAAS,CAAElB,SAAUT,EAASiB,YAAa,SACjE,wBAID,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAaT,EAASmB,SAEtCO,QAAS,kBAAO,EAAKC,SAAS,CAAElB,SAAUT,EAASmB,UAAW,SAC/D,mBAID,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAajB,IAEjBkB,QAAS,WACP,EAAKC,UAAS,SAAApB,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAErB,SACH,YAICC,IAAaT,EAASU,MAAQF,EAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAO,EAAKC,SAAS,CAC5BlB,SAAUT,EAASU,KACnBF,YAAY,KACV,SACL,UAGC,QAGN,cAAC,EAAS,CAACN,MAAOU,WAGvB,EAtEa,CAASgB,aExDzBC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,W","file":"static/js/main.e51fbaf0.chunk.js","sourcesContent":["import { Component } from 'react';\nimport cN from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2): number => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        break;\n    }\n\n    return 0;\n  });\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const updatedGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cN(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => (this.setState({ sortType: SortType.ALPHABET }))}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cN(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => (this.setState({ sortType: SortType.LENGTH }))}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cN(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => {\n              this.setState(state => ({\n                isReversed: !state.isReversed,\n              }));\n            }}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => (this.setState({\n                sortType: SortType.NONE,\n                isReversed: false,\n              }))}\n            >\n              Reset\n            </button>\n          ) : null}\n        </div>\n\n        <GoodsList goods={updatedGoods} />\n      </div>\n    );\n  }\n}\n","type Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          key={good}\n          data-cy=\"Good\"\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}